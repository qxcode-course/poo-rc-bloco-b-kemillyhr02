{
    "patches": [
        {
            "label": "2025-10-22_14-32-08",
            "content": "@@ -289,17 +289,26 @@\n ia: \n-int = 100\n+Bateria%7C None=None\n %0A%0A  \n",
            "lines": "46"
        },
        {
            "label": "2025-10-22_14-33-31",
            "content": "@@ -469,24 +469,16 @@\n otebook \n-ja esta \n ligado%22)\n@@ -517,182 +517,26 @@\n t(f%22\n- desligando notebook%22)%0A    %0A    def desligar(self):%0A        if not self.__ligado:%0A            print(f%22 ja esta desligado%22)%0A        else :%0A            print(f%22ligando notebook\n+Notebook desligado\n %22)%0A \n@@ -697,148 +697,11 @@\n   el\n-if self.__ligado== False:%0A            print(f%22nao pode usar, notebook esta desligado%22)%0A        else:%0A            print(f%22usado por %7Btempo%7D%22)\n+se:\n %0A   \n",
            "lines": "46"
        },
        {
            "label": "2025-10-28_13-22-22",
            "content": "\nclass Bateria:\n    def __init__(self, capacidade):\n        self.__capacidade: int = capacidade\n        self.__carga: int= capacidade \n    \n    def __str__(self)->str:\n        return f\"\"\n    \n\nclass Notebook:\n    def __init__(self):\n        self.__ligado: bool= False\n        self.__bateria: int = 100\n\n    def __str__(self)-> str:\n        return f\"ligar: {self.__ligado} bateria: {self.__bateria}\"\n\n    def ligar(self):\n        if self.__ligado:\n            print(f\"Notebook ja esta ligado\")\n        else :\n            print(f\" desligando notebook\")\n    \n    def desligar(self):\n        if not self.__ligado:\n            print(f\" ja esta desligado\")\n        else :\n            print(f\"ligando notebook\")\n    \n    def usar(self, tempo: int):\n        if tempo>self.__bateria:\n            print(f\" usado por {self.__bateria}\")\n            self.__bateria=0\n        elif self.__ligado== False:\n            print(f\"nao pode usar, notebook esta desligado\")\n        else:\n            print(f\"usado por {tempo}\")\n            self.__bateria-=tempo\n        \n    def mostrar(self):\n        if self.__ligado == True:\n            print(f\" esta ligado\")\n        else :\n            print(f\"esta desligado\")\ndef main():\n    notebook = Notebook() # criando notebook\n    notebook.mostrar()    # msg: Status: Desligado\n    notebook.usar(10)     # msg: erro: ligue o notebook primeiro\n    notebook.ligar()      # msg: notebook ligado\n    notebook.mostrar()    # msg: Status: Ligado\n    notebook.usar(10)     # msg: Usando por 10 minutos\n    notebook.desligar()   # msg: notebook desligado\nmain()\n    \n",
            "lines": "55"
        }
    ]
}